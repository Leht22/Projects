//render the light cube

lightShader.use();
lightShader.setVec3( "lightColor"  , glm::vec3(0.8f,0.4f,1.2f) );
lightShader.setMat4( "projection" , projection );
lightShader.setMat4( "view" , view );
lightShader.setVec4( "clipPlane" , glm::vec4( 0.0f , 1.0f , 0.0f , 999.0f ) );

world = glm::mat4(1.0f);
world = glm::translate( world , lightPos );
world = glm::scale( world , glm::vec3(0.375f));
lightShader.setMat4("world",world);

glBindVertexArray( lightVAO );
glDrawArrays( GL_TRIANGLES , 0 , 36 );

//draw the firefly's
for( unsigned int i = 0; i < 10; i++ )
{
	glm::vec3 fireflyLight = glm::vec3( 1.0f , 0.3f , 1.4f );
	fireflyLight *= ( sinf( (float)glfwGetTime() * 3.0f + i*tau/10.0f )*0.5f + 0.5f );    //glow amount
	lightShader.setVec3( "lightColor"  , fireflyLight );
	world = glm::mat4( 1.0f );
	world = glm::rotate( world , (float)glfwGetTime()/20.0f , glm::vec3( 0 , 1 , 0 ) );
	world = glm::translate( world , 2.0f * fireflyPositions[i] );
	world = glm::scale( world , glm::vec3( 0.025f ) );
	lightShader.setMat4( "world" , world );
	glDrawArrays( GL_TRIANGLES , 0 , 36 );
}